apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

buildscript {

    ext {
        build_tools_version = '29.0.2'

        min_sdk_version = 16 // Minimal supported SDK if later is not needed
        target_sdk_version = 29

        kotlin_version = '1.3.61'
        dokka_version = '0.9.17'
        kandy_version = '1.0.0'
        kandy_version_code = 1
        splitties_version = '3.0.0-alpha06'

        artifact_prefix = 'kandy'
        
        bintray_group_id = 'com.kwezal.kandy'
        bintray_repo_name = 'Kandy'
        bintray_package_name = bintray_repo_name
        bintray_organization_name = 'kwezal'
        bintray_github = 'https://github.com/Kwezal/Kandy'
    }

    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath "org.jetbrains.dokka:dokka-android-gradle-plugin:$dokka_version"
    }
}

allprojects {
    group = bintray_group_id
    version = kandy_version
    repositories {
        google()
        jcenter()
        maven { url 'https://dl.bintray.com/kwezal/Kandy' }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

bintray {
    user = System.getenv('BINTRAY_KWEZAL_USER')
    key = System.getenv('BINTRAY_KWEZAL_KEY')

    def modules = subprojects.findAll { it.name.startsWith(artifact_prefix) }
    publications = modules.collect { it.name }

    pkg {
        repo = bintray_repo_name
        name = bintray_package_name
        userOrg = bintray_organization_name
        licenses = ['Apache-2.0']
        vcsUrl = "${bintray_github}.git"
        websiteUrl = bintray_github
        issueTrackerUrl = "$bintray_github/issues"

        version {
            name = kandy_version
            desc = "Kandy $kandy_version"
            released = new Date()
            vcsTag = ''
        }
    }
}

task assembleAllKandyModules {
    group = 'publishing'

    def modules = subprojects.findAll { it.name.startsWith(artifact_prefix) }
    modules.each {
        dependsOn "${it.name}:assembleRelease"
    }
}

task publishAllKandyModules {
    group = 'publishing'
    
    dependsOn assembleAllKandyModules
    assembleAllKandyModules.finalizedBy(publishToMavenLocal)
}